<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>10</zoom_level>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>10</x>
      <y>20</y>
      <w>121</w>
      <h>121</h>
    </coordinates>
    <panel_attributes>// The name of the image file.
// The needs to be palced relative to the diagram.
// Parent forder needs to be avoided, as it's 
// should be the same as the diagram itself.
image=umlet_logo.png
// If avoided, or frame=false, the frame os removed.
frame=true</panel_attributes>
    <additional_attributes/>
    <custom_code>//Modify the code below to define the element's behavior.
//
//Example:  Change the line
//  y += printCenter(textline,y);
//to
//  y += 2*printCenter(textline,y);
//and observe the element preview.

try
{
    for(String textline : textlines)
    {
        if(textline.startsWith("image="))
        {
        	  try
        	  {
        	     String path = new java.io.File(com.baselet.control.HandlerElementMap.getHandlerForElement(this).getFileHandler().getFullPathName()).getParent();
              String name = textline.substring("image=".length(),textline.length());
              java.awt.image.BufferedImage image = javax.imageio.ImageIO.read(new java.io.File(path+java.io.File.separatorChar+name));
              g2.drawImage(image,0,0,width,height,null);
        	  }
        	  catch(Exception ex)
        	  {
        	  	   int y = textHeight();
        	  	   printCenter("Image can't be loaded.",y);
        	  }
           
           continue;
        }
        else if(textline.startsWith("frame=true"))
        {
            drawRectangle(0,0,width,height);
            
            continue;
        }
    }
}
catch(Exception e)
{
}</custom_code>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>140</x>
      <y>20</y>
      <w>121</w>
      <h>121</h>
    </coordinates>
    <panel_attributes>// If avoided, or frame=false, the frame os removed.
frame=true
// To upload a new image, delete the below.

base64=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
base641=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
base642=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
base643=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
base644=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
base645=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
base646=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
base647=Da5GCBqjG0k7FC6SExQxkg8QMVho3/kOLbSmQuEiBUARI/mDOTQEhdx+u/948KD6D1I7UPrpnHP8IA0KFykAihgpHgSDwEKDoNHtWG0QAh8IFwvvkhKgiJFywTwaxOxHPxLZupW5aK6DHK52a4sRhaRkKGLELeB6hJgFosb5tHKBpXX66SLveY//SBchcQyKGHEfWGpwQd5xh//IIsX5gPqEEKqzzvIfYWkR4jgUMVI94HKEhYYGiw3zanRDpgNFdAMr6+STfQuLVhapIBQxUh8C9+NDD/nCRqvtkHUFwQrEiotHkhpBESP1B+IGMYOoPf+8L3SYe6tLZCSCK4J24olD99EIqTEUMdJs4IYMXJEQNYgbeOSRQ88jr62MAJN2iwmW1LHH+tsUKUJehSJGiAmw7qII+z+IUNJijhQlQlJDESOEEFJRRP4/733TNmkuHncAAAAASUVORK5CYII=</panel_attributes>
    <additional_attributes/>
    <custom_code>//Modify the code below to define the element's behavior.
//
//Example:  Change the line
//  y += printCenter(textline,y);
//to
//  y += 2*printCenter(textline,y);
//and observe the element preview.

try
{
    String base64;
    
    if((base64=getSetting("base64"))!=null)
    {      	  // Restore the image.
        	  StringBuilder buf = new StringBuilder();
			  buf.append(base64);
					
			  int counter = 1;
					
        	  while((base64=getSetting("base64"+counter))!=null)
        	  {
        	  		buf.append(base64);
        	  		counter++;
        	 }
        	  		
        	 byte[] bytes = Base64.getDecoder().decode(buf.toString());
        	 java.awt.image.BufferedImage image = javax.imageio.ImageIO.read(new java.io.ByteArrayInputStream(bytes));
        	 g2.drawImage(image,0,0,width,height,null);
        	 this.repaint();
      }
      else
      {
	        try
	        {    // Load the image.
	        		boolean flag = System.getProperties().containsKey("dialog");

					if(flag)
					{
						return;
					}

	        		System.getProperties().put("dialog","true");
	        		String dir = System.getProperties().getProperty("dir");

					try
					{
					    Thread.sleep(600);
					}
					catch(InterruptedException ex)
					{
					    Thread.currentThread().interrupt();
					}
	        		
					javax.swing.JFileChooser jfc = new javax.swing.JFileChooser(dir!=null ? new java.io.File(dir) : new java.io.File(System.getProperty("user.dir")));
		        	jfc.setFileSelectionMode(javax.swing.JFileChooser.FILES_ONLY);
		        	jfc.setMultiSelectionEnabled(false);
		        	jfc.setDialogTitle("Choose an image to upload: ");
					jfc.setAcceptAllFileFilterUsed(false);
					javax.swing.filechooser.FileNameExtensionFilter filter = new javax.swing.filechooser.FileNameExtensionFilter("PNG, GIF, JPEG, and JPG images", "png", "gif", "jpeg", "jpg");
					jfc.addChoosableFileFilter(filter);
		        	
		        	int returnValue = jfc.showOpenDialog(this);
		
		        if(returnValue==javax.swing.JFileChooser.APPROVE_OPTION)
		        {
                  System.getProperties().remove("dialog");
                  System.getProperties().put("dir",jfc.getCurrentDirectory().getPath());
		            java.io.File selectedFile = jfc.getSelectedFile();

						// Embed the image.
			      	byte[] bytes = java.nio.file.Files.readAllBytes(selectedFile.toPath());
			      	String base64String = Base64.getEncoder().encodeToString(bytes);
						int counter = 0;
							  
				       while(!base64String.isEmpty())
					    {
					        if(base64String.length()&gt;3600)
					        {
					            String temp = base64String.substring(0,3600);
					            setProperty("base64"+(counter&gt;0 ? counter : ""),temp);
					            base64String = base64String.substring(3600);
					            counter++;
					        }
					        else
					        {
					            setProperty("base64"+(counter&gt;0 ? counter : ""),base64String);
					                    
					            break;
					        }
					    }
                    
                    try
                    {
    		            	java.awt.image.BufferedImage image = javax.imageio.ImageIO.read(selectedFile);
    		            	g2.drawImage(image,0,0,width,height,null);
    		            	this.repaint();

    		            	// For some reason, that text only works to refresh the pane.
    		            	printCenter("Image can't be loaded.",textHeight());
                    }
                    catch(Exception ex)
                    {
	        	        		printCenter("Image can't be loaded.",textHeight());
                    }					
		        }
	        }
	        catch(Exception ex)
	        {
	        		printCenter("Image can't be loaded.",textHeight());
	        }
    }
        
    String flag;
           
	 if((flag=getSetting("frame"))!=null &amp;&amp; flag.trim().equals("true"))
    {
        drawRectangle(0,0,width,height);
    }
}
catch(Exception e)
{
}</custom_code>
  </element>
</diagram>
